S               = 'typeInt' SR
                | NotIntType Decl S
                | 'typeVoid' 'identifier' DeclFun S
                | EPSILON

SR              =  'funcDecl' SAux
                | TypeArrOpc 'funcDecl' 'identifier' DeclFun S
                | 'identifier' DeclVar S

SAux            = 'main' Main
                | 'identifier' DeclFun S

Main            = '(' ')' Body

Body            = '{' Content '}'

Content         = Command Content
                | VarType 'identifier' DeclVar Content
                | 'identifier' Contentx
                | 'funcRtn' Rtn ';'
                | EPSILON

Contentx        = '(' ParamsCall ')' ';' Content
                | LAttr ';' Content

Command         = 'cmdIf' '(' Eb ')' Body LElif CmdElse
                | 'cmdWhile' '(' Eb ')' Body
                | 'cmdFor' 'identifier' '=' '(' Ea ',' Ea ',' Ea ')' Body
                | 'funcRead' '(' LIdentifier ')' ';'
                | 'funcPrint' '(' 'stringVal' PrintParams ')' ';'

LElif           = 'cmdElif' '(' Eb ')' Body LElif
                | EPSILON

CmdElse         = 'cmdElse' Body
                | EPSILON

LIdentifier     = 'identifier' LIdentifierx
                | EPSILON

LIdentifierx    = ',' 'identifier' LIdentifierx
                | EPSILON

PrintParams     = ',' Eb PrintParams
                | EPSILON

VarType         = 'typeInt'
                | 'typeFloat'
                | 'typeString'
                | 'typeChar'
                | 'typeBool'

DeclVar         = LVar ';'

LVar            = Varx LVarx
                | EPSILON

LVarx           = ',' Var LVarx
                | EPSILON

Var             = 'identifier' Varx
 
Varx            = '=' Ec
                | ArrOpc

ParamsCall      = Ec ParamsCallx
                | EPSILON

ParamsCallx     = ',' Ec ParamsCallx
                | EPSILON

LAttr           =  '=' Ec LAttrx
                |  '[' Ea ']' '=' Ec LAttrx

LAttrx          = ',' LAttrxx
                | EPSILON

LAttrxx         = 'identifier' '=' Ec LAttrx
                | '[' Ea ']' '=' Ec LAttrx

Rtn             = Ec
                | EPSILON

DeclFun         = '(' Params ')' Body

Params          = VarType 'identifier' ArrOpc Paramsx
                | EPSILON

Paramsx         = ',' VarType 'identifier' ArrOpc Paramsx
                | EPSILON

ArrOpc          = '[' ArrSizeObg ']'
                | EPSILON

ArrSizeObg      = 'identifier'
                | 'intVal'

TypeArrOpc      = '[' ']'
                | EPSILON

NotIntType      = 'typeFloat'
                | 'typeString'
                | 'typeChar'
                | 'typeBool'

Decl            = TypeArrOpc Declx

Declx           = 'funcDecl' 'identifier' DeclFun
                | 'identifier' DeclVar

Ec              = Eb Ecx

Ecx             = 'opConcat' Eb Ecx
                | EPSILON

Eb              = Tb Ebx

Ebx             = 'opOr' Tb Ebx
                | EPSILON

Tb              = Fb Tbx

Tbx             = 'opAnd' Fb Tbx
                | EPSILON

Fb              = 'opNot' Fb
                | Ra Fbx

Fbx             = 'opGtrThan' Fb Fbx
                | 'opLessThan' Fb Fbx
                | 'opGtrEqual' Fb Fbx
                | 'opLessEq' Fb Fbx
                | EPSILON

Ra              = Ea Rax

Rax             = 'opEquals' Ea Rax
                | 'opDiff' Ea Rax
                | EPSILON

Ea              = Ta Eax

Eax             = 'opAdd' Ta Eax
                | 'opSub' Ta Eax
                | EPSILON

Ta              = Fa Tax

Tax             = 'opMult' Fa Tax
                | 'opDiv' Fa Tax
                | 'opMod' Fa Tax
                | EPSILON

Fa              = '(' Ec ')'
                | 'opSub' Fa
                | VarOrFunc
                | 'intVal'
                | 'floatVal'
                | 'stringVal'
                | 'charVal'
                | 'boolVal'


VarOrFunc       = 'identifier' VarOrFuncx

VarOrFuncx      = '[' Ea ']'
                | '(' ParamsCall ')'
                | EPSILON